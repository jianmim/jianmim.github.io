import{b as y}from"./store-dof5ccn5.js";import{B as G,d as m,R as C}from"./index-zQlakb1H.js";const u=function(s){return{apiSysCodeGenAddPost:async(e,a={})=>{const r="/api/sysCodeGen/add",t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...a},l={},p={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in a.params)i.set(c,a.params[c]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};o.headers={...l,...h,...a.headers};const d=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysCodeGenApplicationNamespacesGet:async(e={})=>{const a="/api/sysCodeGen/applicationNamespaces",r=new URL(a,"https://example.com");let t;s&&(t=s.baseOptions);const n={method:"GET",...t,...e},o={},l={};if(s&&s.accessToken){const h=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return n.headers={...o,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:n}},apiSysCodeGenColumnListByTableNameTableNameConfigIdGet:async(e,a,r={})=>{if(e==null)throw new C("tableName","Required parameter tableName was null or undefined when calling apiSysCodeGenColumnListByTableNameTableNameConfigIdGet.");if(a==null)throw new C("configId","Required parameter configId was null or undefined when calling apiSysCodeGenColumnListByTableNameTableNameConfigIdGet.");const t="/api/sysCodeGen/columnListByTableName/{tableName}/{configId}".replace("{tableName}",encodeURIComponent(String(e))).replace("{configId}",encodeURIComponent(String(a))),n=new URL(t,"https://example.com");let o;s&&(o=s.baseOptions);const l={method:"GET",...o,...r},p={},i={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;p.Authorization="Bearer "+c}const h=new URLSearchParams(n.search);for(const c in i)h.set(c,i[c]);for(const c in r.params)h.set(c,r.params[c]);n.search=new URLSearchParams(h).toString();let d=o&&o.headers?o.headers:{};return l.headers={...p,...d,...r.headers},{url:n.pathname+n.search+n.hash,options:l}},apiSysCodeGenDatabaseListGet:async(e={})=>{const a="/api/sysCodeGen/databaseList",r=new URL(a,"https://example.com");let t;s&&(t=s.baseOptions);const n={method:"GET",...t,...e},o={},l={};if(s&&s.accessToken){const h=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return n.headers={...o,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:n}},apiSysCodeGenDeletePost:async(e,a={})=>{const r="/api/sysCodeGen/delete",t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...a},l={},p={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in a.params)i.set(c,a.params[c]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};o.headers={...l,...h,...a.headers};const d=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysCodeGenDetailGet:async(e,a={})=>{if(e==null)throw new C("id","Required parameter id was null or undefined when calling apiSysCodeGenDetailGet.");const r="/api/sysCodeGen/detail",t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"GET",...n,...a},l={},p={};if(s&&s.accessToken){const d=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+d}e!==void 0&&(p.Id=e);const i=new URLSearchParams(t.search);for(const d in p)i.set(d,p[d]);for(const d in a.params)i.set(d,a.params[d]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};return o.headers={...l,...h,...a.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysCodeGenPagePost:async(e,a={})=>{const r="/api/sysCodeGen/page",t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...a},l={},p={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in a.params)i.set(c,a.params[c]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};o.headers={...l,...h,...a.headers};const d=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysCodeGenRunLocalPost:async(e,a={})=>{const r="/api/sysCodeGen/runLocal",t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...a},l={},p={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in a.params)i.set(c,a.params[c]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};o.headers={...l,...h,...a.headers};const d=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysCodeGenTableListConfigIdGet:async(e,a={})=>{if(e==null)throw new C("configId","Required parameter configId was null or undefined when calling apiSysCodeGenTableListConfigIdGet.");const r="/api/sysCodeGen/tableList/{configId}".replace("{configId}",encodeURIComponent(String(e))),t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"GET",...n,...a},l={},p={};if(s&&s.accessToken){const d=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+d}const i=new URLSearchParams(t.search);for(const d in p)i.set(d,p[d]);for(const d in a.params)i.set(d,a.params[d]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};return o.headers={...l,...h,...a.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysCodeGenUpdatePost:async(e,a={})=>{const r="/api/sysCodeGen/update",t=new URL(r,"https://example.com");let n;s&&(n=s.baseOptions);const o={method:"POST",...n,...a},l={},p={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in a.params)i.set(c,a.params[c]);t.search=new URLSearchParams(i).toString();let h=n&&n.headers?n.headers:{};o.headers={...l,...h,...a.headers};const d=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:o}}}},S=function(s){return{async apiSysCodeGenAddPost(e,a){const r=await u(s).apiSysCodeGenAddPost(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}},async apiSysCodeGenApplicationNamespacesGet(e){const a=await u(s).apiSysCodeGenApplicationNamespacesGet(e);return(r=y,t=m)=>{const n={...a.options,url:t+a.url};return r.request(n)}},async apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r){const t=await u(s).apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r);return(n=y,o=m)=>{const l={...t.options,url:o+t.url};return n.request(l)}},async apiSysCodeGenDatabaseListGet(e){const a=await u(s).apiSysCodeGenDatabaseListGet(e);return(r=y,t=m)=>{const n={...a.options,url:t+a.url};return r.request(n)}},async apiSysCodeGenDeletePost(e,a){const r=await u(s).apiSysCodeGenDeletePost(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}},async apiSysCodeGenDetailGet(e,a){const r=await u(s).apiSysCodeGenDetailGet(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}},async apiSysCodeGenPagePost(e,a){const r=await u(s).apiSysCodeGenPagePost(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}},async apiSysCodeGenRunLocalPost(e,a){const r=await u(s).apiSysCodeGenRunLocalPost(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}},async apiSysCodeGenTableListConfigIdGet(e,a){const r=await u(s).apiSysCodeGenTableListConfigIdGet(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}},async apiSysCodeGenUpdatePost(e,a){const r=await u(s).apiSysCodeGenUpdatePost(e,a);return(t=y,n=m)=>{const o={...r.options,url:n+r.url};return t.request(o)}}}};class w extends G{async apiSysCodeGenAddPost(e,a){return S(this.configuration).apiSysCodeGenAddPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenApplicationNamespacesGet(e){return S(this.configuration).apiSysCodeGenApplicationNamespacesGet(e).then(a=>a(this.axios,this.basePath))}async apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r){return S(this.configuration).apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r).then(t=>t(this.axios,this.basePath))}async apiSysCodeGenDatabaseListGet(e){return S(this.configuration).apiSysCodeGenDatabaseListGet(e).then(a=>a(this.axios,this.basePath))}async apiSysCodeGenDeletePost(e,a){return S(this.configuration).apiSysCodeGenDeletePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenDetailGet(e,a){return S(this.configuration).apiSysCodeGenDetailGet(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenPagePost(e,a){return S(this.configuration).apiSysCodeGenPagePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenRunLocalPost(e,a){return S(this.configuration).apiSysCodeGenRunLocalPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenTableListConfigIdGet(e,a){return S(this.configuration).apiSysCodeGenTableListConfigIdGet(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenUpdatePost(e,a){return S(this.configuration).apiSysCodeGenUpdatePost(e,a).then(r=>r(this.axios,this.basePath))}}export{w as S};

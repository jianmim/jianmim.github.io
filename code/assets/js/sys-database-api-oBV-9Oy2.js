import{b as d}from"./store-mQZkmHj-.js";import{B as T,d as m,R as u}from"./index-lw7p-_pG.js";const b=function(s){return{apiSysDatabaseAddColumnPost:async(a,e={})=>{const n="/api/sysDatabase/addColumn",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseAddTablePost:async(a,e={})=>{const n="/api/sysDatabase/addTable",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseColumnListTableNameConfigIdGet:async(a,e,n={})=>{if(a==null)throw new u("tableName","Required parameter tableName was null or undefined when calling apiSysDatabaseColumnListTableNameConfigIdGet.");if(e==null)throw new u("configId","Required parameter configId was null or undefined when calling apiSysDatabaseColumnListTableNameConfigIdGet.");const t="/api/sysDatabase/columnList/{tableName}/{configId}".replace("{tableName}",encodeURIComponent(String(a))).replace("{configId}",encodeURIComponent(String(e))),r=new URL(t,"https://example.com");let o;s&&(o=s.baseOptions);const l={method:"GET",...o,...n},h={},i={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+c}const y=new URLSearchParams(r.search);for(const c in i)y.set(c,i[c]);for(const c in n.params)y.set(c,n.params[c]);r.search=new URLSearchParams(y).toString();let p=o&&o.headers?o.headers:{};return l.headers={...h,...p,...n.headers},{url:r.pathname+r.search+r.hash,options:l}},apiSysDatabaseCreateEntityPost:async(a,e={})=>{const n="/api/sysDatabase/createEntity",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseCreateSeedDataPost:async(a,e={})=>{const n="/api/sysDatabase/createSeedData",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseDbTypeListConfigIdGet:async(a,e={})=>{if(a==null)throw new u("configId","Required parameter configId was null or undefined when calling apiSysDatabaseDbTypeListConfigIdGet.");const n="/api/sysDatabase/dbTypeList/{configId}".replace("{configId}",encodeURIComponent(String(a))),t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"GET",...r,...e},l={},h={};if(s&&s.accessToken){const p=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+p}const i=new URLSearchParams(t.search);for(const p in h)i.set(p,h[p]);for(const p in e.params)i.set(p,e.params[p]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};return o.headers={...l,...y,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseDeleteColumnPost:async(a,e={})=>{const n="/api/sysDatabase/deleteColumn",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseDeleteTablePost:async(a,e={})=>{const n="/api/sysDatabase/deleteTable",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseListGet:async(a={})=>{const e="/api/sysDatabase/list",n=new URL(e,"https://example.com");let t;s&&(t=s.baseOptions);const r={method:"GET",...t,...a},o={},l={};if(s&&s.accessToken){const y=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;o.Authorization="Bearer "+y}const h=new URLSearchParams(n.search);for(const y in l)h.set(y,l[y]);for(const y in a.params)h.set(y,a.params[y]);n.search=new URLSearchParams(h).toString();let i=t&&t.headers?t.headers:{};return r.headers={...o,...i,...a.headers},{url:n.pathname+n.search+n.hash,options:r}},apiSysDatabaseTableListConfigIdGet:async(a,e={})=>{if(a==null)throw new u("configId","Required parameter configId was null or undefined when calling apiSysDatabaseTableListConfigIdGet.");const n="/api/sysDatabase/tableList/{configId}".replace("{configId}",encodeURIComponent(String(a))),t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"GET",...r,...e},l={},h={};if(s&&s.accessToken){const p=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+p}const i=new URLSearchParams(t.search);for(const p in h)i.set(p,h[p]);for(const p in e.params)i.set(p,e.params[p]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};return o.headers={...l,...y,...e.headers},{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseUpdateColumnPost:async(a,e={})=>{const n="/api/sysDatabase/updateColumn",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysDatabaseUpdateTablePost:async(a,e={})=>{const n="/api/sysDatabase/updateTable",t=new URL(n,"https://example.com");let r;s&&(r=s.baseOptions);const o={method:"POST",...r,...e},l={},h={};if(s&&s.accessToken){const c=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in h)i.set(c,h[c]);for(const c in e.params)i.set(c,e.params[c]);t.search=new URLSearchParams(i).toString();let y=r&&r.headers?r.headers:{};o.headers={...l,...y,...e.headers};const p=typeof a!="string"||o.headers["Content-Type"]==="application/json";return o.data=p?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:o}}}},S=function(s){return{async apiSysDatabaseAddColumnPost(a,e){const n=await b(s).apiSysDatabaseAddColumnPost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseAddTablePost(a,e){const n=await b(s).apiSysDatabaseAddTablePost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseColumnListTableNameConfigIdGet(a,e,n){const t=await b(s).apiSysDatabaseColumnListTableNameConfigIdGet(a,e,n);return(r=d,o=m)=>{const l={...t.options,url:o+t.url};return r.request(l)}},async apiSysDatabaseCreateEntityPost(a,e){const n=await b(s).apiSysDatabaseCreateEntityPost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseCreateSeedDataPost(a,e){const n=await b(s).apiSysDatabaseCreateSeedDataPost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseDbTypeListConfigIdGet(a,e){const n=await b(s).apiSysDatabaseDbTypeListConfigIdGet(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseDeleteColumnPost(a,e){const n=await b(s).apiSysDatabaseDeleteColumnPost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseDeleteTablePost(a,e){const n=await b(s).apiSysDatabaseDeleteTablePost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseListGet(a){const e=await b(s).apiSysDatabaseListGet(a);return(n=d,t=m)=>{const r={...e.options,url:t+e.url};return n.request(r)}},async apiSysDatabaseTableListConfigIdGet(a,e){const n=await b(s).apiSysDatabaseTableListConfigIdGet(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseUpdateColumnPost(a,e){const n=await b(s).apiSysDatabaseUpdateColumnPost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}},async apiSysDatabaseUpdateTablePost(a,e){const n=await b(s).apiSysDatabaseUpdateTablePost(a,e);return(t=d,r=m)=>{const o={...n.options,url:r+n.url};return t.request(o)}}}};class w extends T{async apiSysDatabaseAddColumnPost(a,e){return S(this.configuration).apiSysDatabaseAddColumnPost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseAddTablePost(a,e){return S(this.configuration).apiSysDatabaseAddTablePost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseColumnListTableNameConfigIdGet(a,e,n){return S(this.configuration).apiSysDatabaseColumnListTableNameConfigIdGet(a,e,n).then(t=>t(this.axios,this.basePath))}async apiSysDatabaseCreateEntityPost(a,e){return S(this.configuration).apiSysDatabaseCreateEntityPost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseCreateSeedDataPost(a,e){return S(this.configuration).apiSysDatabaseCreateSeedDataPost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseDbTypeListConfigIdGet(a,e){return S(this.configuration).apiSysDatabaseDbTypeListConfigIdGet(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseDeleteColumnPost(a,e){return S(this.configuration).apiSysDatabaseDeleteColumnPost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseDeleteTablePost(a,e){return S(this.configuration).apiSysDatabaseDeleteTablePost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseListGet(a){return S(this.configuration).apiSysDatabaseListGet(a).then(e=>e(this.axios,this.basePath))}async apiSysDatabaseTableListConfigIdGet(a,e){return S(this.configuration).apiSysDatabaseTableListConfigIdGet(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseUpdateColumnPost(a,e){return S(this.configuration).apiSysDatabaseUpdateColumnPost(a,e).then(n=>n(this.axios,this.basePath))}async apiSysDatabaseUpdateTablePost(a,e){return S(this.configuration).apiSysDatabaseUpdateTablePost(a,e).then(n=>n(this.axios,this.basePath))}}export{w as S};

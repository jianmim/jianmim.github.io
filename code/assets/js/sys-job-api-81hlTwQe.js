import{b as P}from"./store-dof5ccn5.js";import{B as m,d as b}from"./index-zQlakb1H.js";const J=function(a){return{apiSysJobAddJobDetailPost:async(e,s={})=>{const r="/api/sysJob/addJobDetail",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobAddJobTriggerPost:async(e,s={})=>{const r="/api/sysJob/addJobTrigger",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobCancelJobPost:async(e,s={})=>{const r="/api/sysJob/cancelJob",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobCancelSleepPost:async(e={})=>{const s="/api/sysJob/cancelSleep",r=new URL(s,"https://example.com");let t;a&&(t=a.baseOptions);const o={method:"POST",...t,...e},n={},l={};if(a&&a.accessToken){const h=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;n.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return o.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:o}},apiSysJobDeleteJobDetailPost:async(e,s={})=>{const r="/api/sysJob/deleteJobDetail",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobDeleteJobTriggerPost:async(e,s={})=>{const r="/api/sysJob/deleteJobTrigger",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobJobClusterListGet:async(e={})=>{const s="/api/sysJob/jobClusterList",r=new URL(s,"https://example.com");let t;a&&(t=a.baseOptions);const o={method:"GET",...t,...e},n={},l={};if(a&&a.accessToken){const h=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;n.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return o.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:o}},apiSysJobJobTriggerListGet:async(e,s={})=>{const r="/api/sysJob/jobTriggerList",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"GET",...o,...s},l={},p={};if(a&&a.accessToken){const y=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+y}e!==void 0&&(p.JobId=e);const i=new URLSearchParams(t.search);for(const y in p)i.set(y,p[y]);for(const y in s.params)i.set(y,s.params[y]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};return n.headers={...l,...h,...s.headers},{url:t.pathname+t.search+t.hash,options:n}},apiSysJobPageJobDetailPost:async(e,s={})=>{const r="/api/sysJob/pageJobDetail",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobPageJobTriggerRecordPost:async(e,s={})=>{const r="/api/sysJob/pageJobTriggerRecord",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobPauseAllJobPost:async(e={})=>{const s="/api/sysJob/pauseAllJob",r=new URL(s,"https://example.com");let t;a&&(t=a.baseOptions);const o={method:"POST",...t,...e},n={},l={};if(a&&a.accessToken){const h=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;n.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return o.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:o}},apiSysJobPauseJobPost:async(e,s={})=>{const r="/api/sysJob/pauseJob",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobPauseTriggerPost:async(e,s={})=>{const r="/api/sysJob/pauseTrigger",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobPersistAllPost:async(e={})=>{const s="/api/sysJob/persistAll",r=new URL(s,"https://example.com");let t;a&&(t=a.baseOptions);const o={method:"POST",...t,...e},n={},l={};if(a&&a.accessToken){const h=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;n.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return o.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:o}},apiSysJobRunJobPost:async(e,s={})=>{const r="/api/sysJob/runJob",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobStartAllJobPost:async(e={})=>{const s="/api/sysJob/startAllJob",r=new URL(s,"https://example.com");let t;a&&(t=a.baseOptions);const o={method:"POST",...t,...e},n={},l={};if(a&&a.accessToken){const h=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;n.Authorization="Bearer "+h}const p=new URLSearchParams(r.search);for(const h in l)p.set(h,l[h]);for(const h in e.params)p.set(h,e.params[h]);r.search=new URLSearchParams(p).toString();let i=t&&t.headers?t.headers:{};return o.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:o}},apiSysJobStartJobPost:async(e,s={})=>{const r="/api/sysJob/startJob",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobStartTriggerPost:async(e,s={})=>{const r="/api/sysJob/startTrigger",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobUpdateJobDetailPost:async(e,s={})=>{const r="/api/sysJob/updateJobDetail",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysJobUpdateJobTriggerPost:async(e,s={})=>{const r="/api/sysJob/updateJobTrigger",t=new URL(r,"https://example.com");let o;a&&(o=a.baseOptions);const n={method:"POST",...o,...s},l={},p={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;l.Authorization="Bearer "+c}l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const c in p)i.set(c,p[c]);for(const c in s.params)i.set(c,s.params[c]);t.search=new URLSearchParams(i).toString();let h=o&&o.headers?o.headers:{};n.headers={...l,...h,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}}}},S=function(a){return{async apiSysJobAddJobDetailPost(e,s){const r=await J(a).apiSysJobAddJobDetailPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobAddJobTriggerPost(e,s){const r=await J(a).apiSysJobAddJobTriggerPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobCancelJobPost(e,s){const r=await J(a).apiSysJobCancelJobPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobCancelSleepPost(e){const s=await J(a).apiSysJobCancelSleepPost(e);return(r=P,t=b)=>{const o={...s.options,url:t+s.url};return r.request(o)}},async apiSysJobDeleteJobDetailPost(e,s){const r=await J(a).apiSysJobDeleteJobDetailPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobDeleteJobTriggerPost(e,s){const r=await J(a).apiSysJobDeleteJobTriggerPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobJobClusterListGet(e){const s=await J(a).apiSysJobJobClusterListGet(e);return(r=P,t=b)=>{const o={...s.options,url:t+s.url};return r.request(o)}},async apiSysJobJobTriggerListGet(e,s){const r=await J(a).apiSysJobJobTriggerListGet(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobPageJobDetailPost(e,s){const r=await J(a).apiSysJobPageJobDetailPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobPageJobTriggerRecordPost(e,s){const r=await J(a).apiSysJobPageJobTriggerRecordPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobPauseAllJobPost(e){const s=await J(a).apiSysJobPauseAllJobPost(e);return(r=P,t=b)=>{const o={...s.options,url:t+s.url};return r.request(o)}},async apiSysJobPauseJobPost(e,s){const r=await J(a).apiSysJobPauseJobPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobPauseTriggerPost(e,s){const r=await J(a).apiSysJobPauseTriggerPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobPersistAllPost(e){const s=await J(a).apiSysJobPersistAllPost(e);return(r=P,t=b)=>{const o={...s.options,url:t+s.url};return r.request(o)}},async apiSysJobRunJobPost(e,s){const r=await J(a).apiSysJobRunJobPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobStartAllJobPost(e){const s=await J(a).apiSysJobStartAllJobPost(e);return(r=P,t=b)=>{const o={...s.options,url:t+s.url};return r.request(o)}},async apiSysJobStartJobPost(e,s){const r=await J(a).apiSysJobStartJobPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobStartTriggerPost(e,s){const r=await J(a).apiSysJobStartTriggerPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobUpdateJobDetailPost(e,s){const r=await J(a).apiSysJobUpdateJobDetailPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}},async apiSysJobUpdateJobTriggerPost(e,s){const r=await J(a).apiSysJobUpdateJobTriggerPost(e,s);return(t=P,o=b)=>{const n={...r.options,url:o+r.url};return t.request(n)}}}};class u extends m{async apiSysJobAddJobDetailPost(e,s){return S(this.configuration).apiSysJobAddJobDetailPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobAddJobTriggerPost(e,s){return S(this.configuration).apiSysJobAddJobTriggerPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobCancelJobPost(e,s){return S(this.configuration).apiSysJobCancelJobPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobCancelSleepPost(e){return S(this.configuration).apiSysJobCancelSleepPost(e).then(s=>s(this.axios,this.basePath))}async apiSysJobDeleteJobDetailPost(e,s){return S(this.configuration).apiSysJobDeleteJobDetailPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobDeleteJobTriggerPost(e,s){return S(this.configuration).apiSysJobDeleteJobTriggerPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobJobClusterListGet(e){return S(this.configuration).apiSysJobJobClusterListGet(e).then(s=>s(this.axios,this.basePath))}async apiSysJobJobTriggerListGet(e,s){return S(this.configuration).apiSysJobJobTriggerListGet(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobPageJobDetailPost(e,s){return S(this.configuration).apiSysJobPageJobDetailPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobPageJobTriggerRecordPost(e,s){return S(this.configuration).apiSysJobPageJobTriggerRecordPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobPauseAllJobPost(e){return S(this.configuration).apiSysJobPauseAllJobPost(e).then(s=>s(this.axios,this.basePath))}async apiSysJobPauseJobPost(e,s){return S(this.configuration).apiSysJobPauseJobPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobPauseTriggerPost(e,s){return S(this.configuration).apiSysJobPauseTriggerPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobPersistAllPost(e){return S(this.configuration).apiSysJobPersistAllPost(e).then(s=>s(this.axios,this.basePath))}async apiSysJobRunJobPost(e,s){return S(this.configuration).apiSysJobRunJobPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobStartAllJobPost(e){return S(this.configuration).apiSysJobStartAllJobPost(e).then(s=>s(this.axios,this.basePath))}async apiSysJobStartJobPost(e,s){return S(this.configuration).apiSysJobStartJobPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobStartTriggerPost(e,s){return S(this.configuration).apiSysJobStartTriggerPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobUpdateJobDetailPost(e,s){return S(this.configuration).apiSysJobUpdateJobDetailPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysJobUpdateJobTriggerPost(e,s){return S(this.configuration).apiSysJobUpdateJobTriggerPost(e,s).then(r=>r(this.axios,this.basePath))}}export{u as S};

import{b as P}from"./store-dof5ccn5.js";import{B as O,d as m}from"./index-zQlakb1H.js";const S=function(a){return{apiSysNoticeAddPost:async(e,s={})=>{const o="/api/sysNotice/add",t=new URL(o,"https://example.com");let r;a&&(r=a.baseOptions);const n={method:"POST",...r,...s},i={},l={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;i.Authorization="Bearer "+c}i["Content-Type"]="application/json-patch+json";const h=new URLSearchParams(t.search);for(const c in l)h.set(c,l[c]);for(const c in s.params)h.set(c,s.params[c]);t.search=new URLSearchParams(h).toString();let p=r&&r.headers?r.headers:{};n.headers={...i,...p,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysNoticeDeletePost:async(e,s={})=>{const o="/api/sysNotice/delete",t=new URL(o,"https://example.com");let r;a&&(r=a.baseOptions);const n={method:"POST",...r,...s},i={},l={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;i.Authorization="Bearer "+c}i["Content-Type"]="application/json-patch+json";const h=new URLSearchParams(t.search);for(const c in l)h.set(c,l[c]);for(const c in s.params)h.set(c,s.params[c]);t.search=new URLSearchParams(h).toString();let p=r&&r.headers?r.headers:{};n.headers={...i,...p,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysNoticePagePost:async(e,s={})=>{const o="/api/sysNotice/page",t=new URL(o,"https://example.com");let r;a&&(r=a.baseOptions);const n={method:"POST",...r,...s},i={},l={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;i.Authorization="Bearer "+c}i["Content-Type"]="application/json-patch+json";const h=new URLSearchParams(t.search);for(const c in l)h.set(c,l[c]);for(const c in s.params)h.set(c,s.params[c]);t.search=new URLSearchParams(h).toString();let p=r&&r.headers?r.headers:{};n.headers={...i,...p,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysNoticePageReceivedGet:async(e,s,o,t,r,n,i,l={})=>{const h="/api/sysNotice/pageReceived",p=new URL(h,"https://example.com");let y;a&&(y=a.baseOptions);const c={method:"GET",...y,...l},N={},d={};if(a&&a.accessToken){const T=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;N.Authorization="Bearer "+T}e!==void 0&&(d.Title=e),s!==void 0&&(d.Type=s),o!==void 0&&(d.Page=o),t!==void 0&&(d.PageSize=t),r!==void 0&&(d.Field=r),n!==void 0&&(d.Order=n),i!==void 0&&(d.DescStr=i);const R=new URLSearchParams(p.search);for(const T in d)R.set(T,d[T]);for(const T in l.params)R.set(T,l.params[T]);p.search=new URLSearchParams(R).toString();let k=y&&y.headers?y.headers:{};return c.headers={...N,...k,...l.headers},{url:p.pathname+p.search+p.hash,options:c}},apiSysNoticePublicPost:async(e,s={})=>{const o="/api/sysNotice/public",t=new URL(o,"https://example.com");let r;a&&(r=a.baseOptions);const n={method:"POST",...r,...s},i={},l={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;i.Authorization="Bearer "+c}i["Content-Type"]="application/json-patch+json";const h=new URLSearchParams(t.search);for(const c in l)h.set(c,l[c]);for(const c in s.params)h.set(c,s.params[c]);t.search=new URLSearchParams(h).toString();let p=r&&r.headers?r.headers:{};n.headers={...i,...p,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysNoticeSetReadPost:async(e,s={})=>{const o="/api/sysNotice/setRead",t=new URL(o,"https://example.com");let r;a&&(r=a.baseOptions);const n={method:"POST",...r,...s},i={},l={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;i.Authorization="Bearer "+c}i["Content-Type"]="application/json-patch+json";const h=new URLSearchParams(t.search);for(const c in l)h.set(c,l[c]);for(const c in s.params)h.set(c,s.params[c]);t.search=new URLSearchParams(h).toString();let p=r&&r.headers?r.headers:{};n.headers={...i,...p,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}},apiSysNoticeUnReadListGet:async(e={})=>{const s="/api/sysNotice/unReadList",o=new URL(s,"https://example.com");let t;a&&(t=a.baseOptions);const r={method:"GET",...t,...e},n={},i={};if(a&&a.accessToken){const p=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;n.Authorization="Bearer "+p}const l=new URLSearchParams(o.search);for(const p in i)l.set(p,i[p]);for(const p in e.params)l.set(p,e.params[p]);o.search=new URLSearchParams(l).toString();let h=t&&t.headers?t.headers:{};return r.headers={...n,...h,...e.headers},{url:o.pathname+o.search+o.hash,options:r}},apiSysNoticeUpdatePost:async(e,s={})=>{const o="/api/sysNotice/update",t=new URL(o,"https://example.com");let r;a&&(r=a.baseOptions);const n={method:"POST",...r,...s},i={},l={};if(a&&a.accessToken){const c=typeof a.accessToken=="function"?await a.accessToken():await a.accessToken;i.Authorization="Bearer "+c}i["Content-Type"]="application/json-patch+json";const h=new URLSearchParams(t.search);for(const c in l)h.set(c,l[c]);for(const c in s.params)h.set(c,s.params[c]);t.search=new URLSearchParams(h).toString();let p=r&&r.headers?r.headers:{};n.headers={...i,...p,...s.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:t.pathname+t.search+t.hash,options:n}}}},u=function(a){return{async apiSysNoticeAddPost(e,s){const o=await S(a).apiSysNoticeAddPost(e,s);return(t=P,r=m)=>{const n={...o.options,url:r+o.url};return t.request(n)}},async apiSysNoticeDeletePost(e,s){const o=await S(a).apiSysNoticeDeletePost(e,s);return(t=P,r=m)=>{const n={...o.options,url:r+o.url};return t.request(n)}},async apiSysNoticePagePost(e,s){const o=await S(a).apiSysNoticePagePost(e,s);return(t=P,r=m)=>{const n={...o.options,url:r+o.url};return t.request(n)}},async apiSysNoticePageReceivedGet(e,s,o,t,r,n,i,l){const h=await S(a).apiSysNoticePageReceivedGet(e,s,o,t,r,n,i,l);return(p=P,y=m)=>{const c={...h.options,url:y+h.url};return p.request(c)}},async apiSysNoticePublicPost(e,s){const o=await S(a).apiSysNoticePublicPost(e,s);return(t=P,r=m)=>{const n={...o.options,url:r+o.url};return t.request(n)}},async apiSysNoticeSetReadPost(e,s){const o=await S(a).apiSysNoticeSetReadPost(e,s);return(t=P,r=m)=>{const n={...o.options,url:r+o.url};return t.request(n)}},async apiSysNoticeUnReadListGet(e){const s=await S(a).apiSysNoticeUnReadListGet(e);return(o=P,t=m)=>{const r={...s.options,url:t+s.url};return o.request(r)}},async apiSysNoticeUpdatePost(e,s){const o=await S(a).apiSysNoticeUpdatePost(e,s);return(t=P,r=m)=>{const n={...o.options,url:r+o.url};return t.request(n)}}}};class A extends O{async apiSysNoticeAddPost(e,s){return u(this.configuration).apiSysNoticeAddPost(e,s).then(o=>o(this.axios,this.basePath))}async apiSysNoticeDeletePost(e,s){return u(this.configuration).apiSysNoticeDeletePost(e,s).then(o=>o(this.axios,this.basePath))}async apiSysNoticePagePost(e,s){return u(this.configuration).apiSysNoticePagePost(e,s).then(o=>o(this.axios,this.basePath))}async apiSysNoticePageReceivedGet(e,s,o,t,r,n,i,l){return u(this.configuration).apiSysNoticePageReceivedGet(e,s,o,t,r,n,i,l).then(h=>h(this.axios,this.basePath))}async apiSysNoticePublicPost(e,s){return u(this.configuration).apiSysNoticePublicPost(e,s).then(o=>o(this.axios,this.basePath))}async apiSysNoticeSetReadPost(e,s){return u(this.configuration).apiSysNoticeSetReadPost(e,s).then(o=>o(this.axios,this.basePath))}async apiSysNoticeUnReadListGet(e){return u(this.configuration).apiSysNoticeUnReadListGet(e).then(s=>s(this.axios,this.basePath))}async apiSysNoticeUpdatePost(e,s){return u(this.configuration).apiSysNoticeUpdatePost(e,s).then(o=>o(this.axios,this.basePath))}}export{A as S};

import{b as T}from"./store-dof5ccn5.js";import{B as d,d as P}from"./index-xdJ7pE-g.js";const S=function(s){return{apiSysTenantAddPost:async(a,e={})=>{const o="/api/sysTenant/add",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantCreateDbPost:async(a,e={})=>{const o="/api/sysTenant/createDb",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantDeletePost:async(a,e={})=>{const o="/api/sysTenant/delete",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantGrantMenuPost:async(a,e={})=>{const o="/api/sysTenant/grantMenu",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantOwnMenuListGet:async(a,e={})=>{const o="/api/sysTenant/ownMenuList",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"GET",...n,...e},h={},p={};if(s&&s.accessToken){const l=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+l}a!==void 0&&(p.UserId=a);const i=new URLSearchParams(t.search);for(const l in p)i.set(l,p[l]);for(const l in e.params)i.set(l,e.params[l]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};return c.headers={...h,...y,...e.headers},{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantPagePost:async(a,e={})=>{const o="/api/sysTenant/page",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantResetPwdPost:async(a,e={})=>{const o="/api/sysTenant/resetPwd",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantSetStatusPost:async(a,e={})=>{const o="/api/sysTenant/setStatus",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantUpdatePost:async(a,e={})=>{const o="/api/sysTenant/update",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}},apiSysTenantUserListPost:async(a,e={})=>{const o="/api/sysTenant/userList",t=new URL(o,"https://example.com");let n;s&&(n=s.baseOptions);const c={method:"POST",...n,...e},h={},p={};if(s&&s.accessToken){const r=typeof s.accessToken=="function"?await s.accessToken():await s.accessToken;h.Authorization="Bearer "+r}h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const r in p)i.set(r,p[r]);for(const r in e.params)i.set(r,e.params[r]);t.search=new URLSearchParams(i).toString();let y=n&&n.headers?n.headers:{};c.headers={...h,...y,...e.headers};const l=typeof a!="string"||c.headers["Content-Type"]==="application/json";return c.data=l?JSON.stringify(a!==void 0?a:{}):a||"",{url:t.pathname+t.search+t.hash,options:c}}}},m=function(s){return{async apiSysTenantAddPost(a,e){const o=await S(s).apiSysTenantAddPost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantCreateDbPost(a,e){const o=await S(s).apiSysTenantCreateDbPost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantDeletePost(a,e){const o=await S(s).apiSysTenantDeletePost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantGrantMenuPost(a,e){const o=await S(s).apiSysTenantGrantMenuPost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantOwnMenuListGet(a,e){const o=await S(s).apiSysTenantOwnMenuListGet(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantPagePost(a,e){const o=await S(s).apiSysTenantPagePost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantResetPwdPost(a,e){const o=await S(s).apiSysTenantResetPwdPost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantSetStatusPost(a,e){const o=await S(s).apiSysTenantSetStatusPost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantUpdatePost(a,e){const o=await S(s).apiSysTenantUpdatePost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}},async apiSysTenantUserListPost(a,e){const o=await S(s).apiSysTenantUserListPost(a,e);return(t=T,n=P)=>{const c={...o.options,url:n+o.url};return t.request(c)}}}};class w extends d{async apiSysTenantAddPost(a,e){return m(this.configuration).apiSysTenantAddPost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantCreateDbPost(a,e){return m(this.configuration).apiSysTenantCreateDbPost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantDeletePost(a,e){return m(this.configuration).apiSysTenantDeletePost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantGrantMenuPost(a,e){return m(this.configuration).apiSysTenantGrantMenuPost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantOwnMenuListGet(a,e){return m(this.configuration).apiSysTenantOwnMenuListGet(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantPagePost(a,e){return m(this.configuration).apiSysTenantPagePost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantResetPwdPost(a,e){return m(this.configuration).apiSysTenantResetPwdPost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantSetStatusPost(a,e){return m(this.configuration).apiSysTenantSetStatusPost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantUpdatePost(a,e){return m(this.configuration).apiSysTenantUpdatePost(a,e).then(o=>o(this.axios,this.basePath))}async apiSysTenantUserListPost(a,e){return m(this.configuration).apiSysTenantUserListPost(a,e).then(o=>o(this.axios,this.basePath))}}export{w as S};
